substitutions:
  _IMAGE_VERSION: "6"
  _IMAGE: "europe-west1-docker.pkg.dev/${PROJECT_ID}/greengage/ggdb${_IMAGE_VERSION}"

steps:
# Step 1 - Prepare source code
- name: 'gcr.io/cloud-builders/git'
  id: prepare
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    git fetch --unshallow --tags
    git submodule update --init --recursive
    git describe --tags --abbrev=0 | tr '/' '_' > /workspace/image_tag.txt

# Step 2 - Build CentOS image
- name: 'gcr.io/cloud-builders/docker'
  id: build_centos
  waitFor: ['prepare']
  env:
    - 'TARGET_OS=centos'
    - 'TARGET_OS_VERSION=7'
    - 'PYTHON3='  # Empty for CentOS
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    image_tag=$(cat /workspace/image_tag.txt)
    full_image="${_IMAGE}-$${TARGET_OS}$${TARGET_OS_VERSION}:${image_tag}"
    
    docker build --tag $full_image \
      --build-arg PYTHON3=$$PYTHON3 \
      --build-arg TARGET_OS=$$TARGET_OS \
      --build-arg TARGET_OS_VERSION=$$TARGET_OS_VERSION \
      --build-arg PROJECT_ID=$PROJECT_ID \
      .
    docker push $full_image

# Step 3 - Build Ubuntu image
- name: 'gcr.io/cloud-builders/docker'
  id: build_ubuntu
  waitFor: ['prepare']
  env:
    - 'TARGET_OS=ubuntu'
    - 'TARGET_OS_VERSION=22'
    - 'PYTHON3=python3'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    image_tag=$(cat /workspace/image_tag.txt)
    full_image="${_IMAGE}-$${TARGET_OS}$${TARGET_OS_VERSION}:${image_tag}"
    
    docker build --tag $full_image \
      --build-arg PYTHON3=$$PYTHON3 \
      --build-arg TARGET_OS=$$TARGET_OS \
      --build-arg TARGET_OS_VERSION=$$TARGET_OS_VERSION \
      --build-arg PROJECT_ID=$PROJECT_ID \
      .
    docker push $full_image

options:
  machineType: 'E2_HIGHCPU_8'
  logging: CLOUD_LOGGING_ONLY
