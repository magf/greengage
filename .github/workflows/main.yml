name: Build Docker Images

on:
  push:
    branches:
      - '*'
    tags:
      - '*'

env:
  CI_REPO: magf/ci

jobs:
  determine_version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.run_script.outputs.version }}
      matrix: ${{ steps.run_script.outputs.matrix }}
    steps:
      - name: Checkout greengage repo
        uses: actions/checkout@v4
        with:
          repository: magf/greengage
          fetch-depth: 0
      - name: Create .ci directory
        run: mkdir -p .ci
      - name: Checkout remote CI repo
        id: checkout_remote_ci
        uses: actions/checkout@v4
        continue-on-error: true
        with:
          repository: ${{ env.CI_REPO }}
          path: .ci
      - name: Fallback to ci directory if remote fails
        if: steps.checkout_remote_ci.outcome != 'success'
        run: |
          if [ -d "ci" ]; then
            ln -s $(pwd)/ci .ci
          else
            echo "Error: Neither remote CI repo (${{ env.CI_REPO }}) nor local ci directory found, cannot proceed."
            exit 1
      - name: Install yq
        run: |
          sudo apt-get update
          sudo apt-get install -y wget
          wget https://github.com/mikefarah/yq/releases/download/v4.44.3/yq_linux_amd64 -O /usr/bin/yq
          chmod +x /usr/bin/yq
      - name: Run version and matrix build
        id: run_script
        run: |
          chmod +x .ci/build.sh
          .ci/build.sh determine_version
        env:
          GITHUB_EVENT_NAME: ${{ github.event_name }}
          GITHUB_REF: ${{ github.ref }}

  build:
    needs: determine_version
    strategy:
      matrix:
        config: ${{ fromJson(needs.determine_version.outputs.matrix) }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout greengage repo
        uses: actions/checkout@v4
        with:
          repository: magf/greengage
          fetch-depth: 0
      - name: Create .ci directory
        run: mkdir -p .ci
      - name: Checkout remote CI repo
        id: checkout_remote_ci
        uses: actions/checkout@v4
        continue-on-error: true
        with:
          repository: ${{ env.CI_REPO }}
          path: .ci
      - name: Fallback to ci directory if remote fails
        if: steps.checkout_remote_ci.outcome != 'success'
        run: |
          if [ -d "ci" ]; then
            ln -s $(pwd)/ci .ci
          else
            echo "Error: Neither remote CI repo (${{ env.CI_REPO }}) nor local ci directory found, cannot proceed."
            exit 1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Run build
        run: |
          chmod +x .ci/build.sh
          .ci/build.sh build
        env:
          VERSION: ${{ needs.determine_version.outputs.version }}
          TARGET_OS: ${{ matrix.config.TARGET_OS }}
          TARGET_OS_VERSION: ${{ matrix.config.TARGET_OS_VERSION }}
          PYTHON3: ${{ matrix.config.PYTHON3 }}
          GITHUB_EVENT_NAME: ${{ github.event_name }}
          GITHUB_REF: ${{ github.ref }}
          GITHUB_REPOSITORY: ${{ github.repository }}
